---
name: Push Docker Images

on:
  push:
    branches:
      - master
      - main

env:
  registry: ghcr.io
  user: y0ri0

jobs:
  files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7
        with:
          fetch-depth: 0
      - name: Get Git Changed File Directories
        id: directories
        uses: step-security/changed-files/@3dbe17c78367e7d60f00d78ae6781a35be47b4a1 # v45.0.1
        with:
          dir_names: false
          json: true
          escape_json: false
          files: |
            **/Dockerfile
      - name: Output Changed Directories
        run: echo ${{ steps.directories.outputs.all_changed_files }}
    outputs:
      dirs: ${{ steps.directories.outputs.all_changed_files }}

  define-matrix:
    runs-on: ubuntu-latest
    needs: [files]
    if: ${{ needs.files.outputs.dirs != '[]' }}

    outputs:
      files: ${{ steps.filepath-matrix.outputs.matrix }}

    steps:
      - name: Set job matrix
        id: filepath-matrix
        run: |
          # Format: ["boxes/browser/Dockerfile","boxes/dev/Dockerfile"]
          echo ${{ toJson(needs.files.outputs.dirs) }}  # Debug
          echo "matrix=${{ toJson(needs.files.outputs.dirs) }}" >> $GITHUB_OUTPUT

  run-build:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        file: ${{ fromJSON(needs.define-matrix.outputs.files) }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: awk image name from path
      id: awk
      env:
        filepath: ${{ matrix.file }}
      run: |
       echo "img=$(echo '${{ env.filepath }}' | awk -F'/' '{print $(NF-1)}')" >> $GITHUB_OUTPUT

    # - name: Cache Docker layers
    #   uses: actions/cache@v4
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ runner.os }}-buildx-${{ github.sha }}
    #     restore-keys: |
    #       ${{ runner.os }}-buildx-

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        push: true
        file: ${{ matrix.file }}
        # cache-from: type=local,src=/tmp/.buildx-cache
        # cache-to: type=local,dest=/tmp/.buildx-cache
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: |
          ${{ env.registry }}/${{ env.user }}/${{ steps.awk.outputs.img }}:latest
          ${{ env.registry }}/${{ env.user }}/${{ steps.awk.outputs.img }}:${{ github.sha }}
